{"version":3,"sources":["webpack://splitpanes/webpack/universalModuleDefinition","webpack://splitpanes/webpack/bootstrap","webpack://splitpanes/./src/components/splitpanes/splitpanes.vue?61e1","webpack://splitpanes/./node_modules/current-script-polyfill/currentScript.js","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://splitpanes/src/components/splitpanes/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes/splitpanes.vue?8fdd","webpack://splitpanes/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://splitpanes/./src/components/splitpanes/pane.js","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/entry-lib-no-default.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","document","currentScript","scripts","getElementsByTagName","Error","err","res","exec","stack","src","readyState","window","match","render","staticRenderFns","props","horizontal","type","Boolean","required","default","pushOtherPanes","dblClickSplitter","data","watch","panes","deep","immediate","handler","updatePanesStyle","direction","enable","splitters","forEach","splitter","ondblclick","undefined","methods","children","pane","index","update","bindEvents","addEventListener","onMouseMove","passive","onMouseUp","unbindEvents","removeEventListener","onMouseDown","touch","mouseDown","activeSplitter","splitterIndex","event","preventDefault","dragging","calculatePanesSize","getCurrentMouseDrag","$emit","min","max","size","setTimeout","onSplitterClick","splitterTaps","clearTimeout","spltterTaps","timeoutId","onSplitterDblClick","map","totalMinSizes","onPaneClick","paneIndex","x","clientX","rect","left","y","clientY","top","getCurrentDragPercentage","drag","prevPanesSize","sumPrevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","paneBeforeMaxReached","paneAfterMaxReached","paneBefore","paneAfter","Math","vars","panesToResize","doPushOtherPanes","findPrevExpandedPane","sums","findNextExpandedPane","length","reduce","child","classList","contains","lastIsPane","elm","add","setAttribute","onmousedown","ontouchstart","onclick","configurable","writable","argArr","Array","slice","arguments","isNode","argItem","Node","docFrag","appendChild","parentNode","insertBefore","before","nbPanes","setPanesSizesToDefault","vm","Number","parseFloat","remove","hasAttribute","splice","requestUpdate","entries","args","updated","mounted","container","$refs","h","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","concat","component","String","sizeNumber","minSizeNumber","minSize","maxSizeNumber","maxSize","$parent","style","$slots"],"mappings":"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","file":"splitpanes.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"splitpanes\"] = factory();\n\telse\n\t\troot[\"splitpanes\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fae3\");\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"","// document.currentScript polyfill by Adam Miller\n\n// MIT license\n\n(function(document){\n  var currentScript = \"currentScript\",\n      scripts = document.getElementsByTagName('script'); // Live NodeList collection\n\n  // If browser needs currentScript polyfill, add get currentScript() to the document object\n  if (!(currentScript in document)) {\n    Object.defineProperty(document, currentScript, {\n      get: function(){\n\n        // IE 6-10 supports script readyState\n        // IE 10+ support stack trace\n        try { throw new Error(); }\n        catch (err) {\n\n          // Find the second match for the \"at\" string to get file src url from stack.\n          // Specifically works with the format of stack traces in IE.\n          var i, res = ((/.*at [^\\(]*\\((.*):.+:.+\\)$/ig).exec(err.stack) || [false])[1];\n\n          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag\n          for(i in scripts){\n            if(scripts[i].src == res || scripts[i].readyState == \"interactive\"){\n              return scripts[i];\n            }\n          }\n\n          // If no match, return null\n          return null;\n        }\n      }\n    });\n  }\n})(document);\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    require('current-script-polyfill')\n  }\n\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","<script>\r\nexport default {\r\n  name: \"splitpanes\",\r\n  props: {\r\n    horizontal: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    pushOtherPanes: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    dblClickSplitter: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    }\r\n  },\r\n  data: () => ({\r\n    container: null,\r\n    panes: [],\r\n    touch: {\r\n      mouseDown: false,\r\n      dragging: false,\r\n      activeSplitter: null\r\n    },\r\n    splitterTaps: {\r\n      // Used to detect double click on touch devices.\r\n      splitter: null,\r\n      timeoutId: null\r\n    }\r\n  }),\r\n  watch: {\r\n    panes: {\r\n      // Every time a pane is updated, update the panes accordingly.\r\n      deep: true,\r\n      immediate: false,\r\n      handler() {\r\n        this.updatePanesStyle();\r\n      }\r\n    },\r\n    direction() {\r\n      this.updatePanesStyle();\r\n    },\r\n    dblClickSplitter(enable) {\r\n      const splitters = [\r\n        ...this.container.querySelectorAll(\".splitpanes__splitter\")\r\n      ];\r\n      if (enable) {\r\n        splitters.forEach((splitter, index) => {\r\n          splitter.ondblclick = event => this.onSplitterDblClick(event, index);\r\n        });\r\n      } else {\r\n        splitters.forEach(splitter => {\r\n          splitter.ondblclick = undefined;\r\n        });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    updatePanesStyle() {\r\n      // Using `this.$children` here rather than `this.$slots.default` because the latter is sometimes not initialized yet (eg. when this method is called\r\n      // whereas the component is not mounted yet).\r\n      const children = this.$children;\r\n      this.panes.forEach(pane => {\r\n        children[pane.index].update({\r\n          [this.horizontal ? \"height\" : \"width\"]: `${pane.size}%`\r\n        });\r\n      });\r\n    },\r\n    bindEvents() {\r\n      document.addEventListener(\"mousemove\", this.onMouseMove, {\r\n        passive: false\r\n      });\r\n      document.addEventListener(\"mouseup\", this.onMouseUp);\r\n      // Passive: false to prevent scrolling while touch dragging.\r\n      if (\"ontouchstart\" in window) {\r\n        document.addEventListener(\"touchmove\", this.onMouseMove, {\r\n          passive: false\r\n        });\r\n        document.addEventListener(\"touchend\", this.onMouseUp);\r\n      }\r\n    },\r\n    unbindEvents() {\r\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\r\n      document.removeEventListener(\"mouseup\", this.onMouseUp);\r\n      if (\"ontouchstart\" in window) {\r\n        document.removeEventListener(\"touchmove\", this.onMouseMove);\r\n        document.removeEventListener(\"touchend\", this.onMouseUp);\r\n      }\r\n    },\r\n    onMouseDown(event, splitterIndex) {\r\n      this.bindEvents();\r\n      this.touch.mouseDown = true;\r\n      this.touch.activeSplitter = splitterIndex;\r\n    },\r\n    onMouseMove(event) {\r\n      if (this.touch.mouseDown) {\r\n        // Prevent scrolling while touch dragging (only works with an active event, eg. passive: false).\r\n        event.preventDefault();\r\n        this.touch.dragging = true;\r\n        this.calculatePanesSize(this.getCurrentMouseDrag(event));\r\n        this.$emit(\r\n          \"resize\",\r\n          this.panes.map(pane => ({\r\n            min: pane.min,\r\n            max: pane.max,\r\n            size: pane.size\r\n          }))\r\n        );\r\n      }\r\n    },\r\n    onMouseUp() {\r\n      if (this.touch.dragging) {\r\n        this.$emit(\r\n          \"resized\",\r\n          this.panes.map(pane => ({\r\n            min: pane.min,\r\n            max: pane.max,\r\n            size: pane.size\r\n          }))\r\n        );\r\n      }\r\n      this.touch.mouseDown = false;\r\n      // Keep dragging flag until click event is finished (click happens immediately after mouseup)\r\n      // in order to prevent emitting `splitter-click` event if splitter was dragged.\r\n      setTimeout(() => {\r\n        this.touch.dragging = false;\r\n        this.unbindEvents();\r\n      }, 100);\r\n    },\r\n    // If touch device, detect double tap manually (2 taps separated by less than 500ms).\r\n    onSplitterClick(event, splitterIndex) {\r\n      if (\"ontouchstart\" in window) {\r\n        event.preventDefault();\r\n        if (this.splitterTaps.splitter === splitterIndex) {\r\n          clearTimeout(this.spltterTaps.timeoutId);\r\n          this.splitterTaps.timeoutId = null;\r\n          this.onSplitterDblClick(event, splitterIndex);\r\n        } else {\r\n          this.splitterTaps.splitter = splitterIndex;\r\n          this.splitterTaps.timeoutId = setTimeout(() => {\r\n            this.splitterTaps.splitter = null;\r\n          }, 500);\r\n        }\r\n      }\r\n\r\n      if (!this.touch.dragging) {\r\n        this.$emit(\"splitter-click\", this.panes[splitterIndex]);\r\n      }\r\n    },\r\n    // On splitter dbl click or dbl tap maximize this pane.\r\n    onSplitterDblClick(event, splitterIndex) {\r\n      let totalMinSizes = 0;\r\n      this.panes = this.panes.map((pane, i) => {\r\n        pane.size = i === splitterIndex ? pane.max : pane.min;\r\n        if (i !== splitterIndex) {\r\n          totalMinSizes += pane.min;\r\n        }\r\n        return pane;\r\n      });\r\n      this.panes[splitterIndex].size -= totalMinSizes;\r\n      this.$emit(\"pane-maximize\", this.panes[splitterIndex]);\r\n    },\r\n    onPaneClick(event, paneIndex) {\r\n      this.$emit(\"pane-click\", this.panes[paneIndex]);\r\n    },\r\n    // Get the cursor position relative to the splitpane container.\r\n    getCurrentMouseDrag(event) {\r\n      const rect = this.container.getBoundingClientRect();\r\n      const { clientX, clientY } =\r\n        \"ontouchstart\" in window && event.touches ? event.touches[0] : event;\r\n      return {\r\n        x: clientX - rect.left,\r\n        y: clientY - rect.top\r\n      };\r\n    },\r\n    // Returns the drag percentage of the splitter relative to the 2 panes it's inbetween.\r\n    // if the sum of size of the 2 cells is 60%, the dragPercentage range will be 0 to 100% of this 60%.\r\n    getCurrentDragPercentage(drag) {\r\n      drag = drag[this.horizontal ? \"y\" : \"x\"];\r\n      // In the code bellow 'size' refers to 'width' for vertical and 'height' for horizontal layout.\r\n      const containerSize = this.container[\r\n        this.horizontal ? \"clientHeight\" : \"clientWidth\"\r\n      ];\r\n      return (drag * 100) / containerSize;\r\n    },\r\n    calculatePanesSize(drag) {\r\n      const splitterIndex = this.touch.activeSplitter;\r\n      let sums = {\r\n        prevPanesSize: this.sumPrevPanesSize(splitterIndex),\r\n        nextPanesSize: this.sumNextPanesSize(splitterIndex),\r\n        prevReachedMinPanes: 0,\r\n        nextReachedMinPanes: 0\r\n      };\r\n\r\n      const minDrag = 0 + (this.pushOtherPanes ? 0 : sums.prevPanesSize);\r\n      const maxDrag = 100 - (this.pushOtherPanes ? 0 : sums.nextPanesSize);\r\n      const dragPercentage = Math.max(\r\n        Math.min(this.getCurrentDragPercentage(drag), maxDrag),\r\n        minDrag\r\n      );\r\n\r\n      // If not pushing other panes, panes to resize are right before and right after splitter.\r\n      let panesToResize = [splitterIndex, splitterIndex + 1];\r\n      let paneBefore = this.panes[panesToResize[0]] || null;\r\n      let paneAfter = this.panes[panesToResize[1]] || null;\r\n\r\n      const paneBeforeMaxReached =\r\n        paneBefore.max < 100 &&\r\n        dragPercentage >= paneBefore.max + sums.prevPanesSize;\r\n      const paneAfterMaxReached =\r\n        paneAfter.max < 100 &&\r\n        dragPercentage <=\r\n          100 - (paneAfter.max + this.sumNextPanesSize(splitterIndex + 1));\r\n      // Prevent dragging beyond pane max.\r\n      if (paneBeforeMaxReached || paneAfterMaxReached) {\r\n        if (paneBeforeMaxReached) {\r\n          paneBefore.size = paneBefore.max;\r\n          paneAfter.size = Math.max(\r\n            100 - paneBefore.max - sums.prevPanesSize - sums.nextPanesSize,\r\n            0\r\n          );\r\n        } else {\r\n          paneBefore.size = Math.max(\r\n            100 -\r\n              paneAfter.max -\r\n              sums.prevPanesSize -\r\n              this.sumNextPanesSize(splitterIndex + 1),\r\n            0\r\n          );\r\n          paneAfter.size = paneAfter.max;\r\n        }\r\n        return;\r\n      }\r\n\r\n      // When pushOtherPanes = true, find the closest expanded pane on each side of the splitter.\r\n      if (this.pushOtherPanes) {\r\n        const vars = this.doPushOtherPanes(sums, dragPercentage);\r\n        if (!vars) {\r\n          return; // Prevent other calculation.\r\n        }\r\n        ({ sums, panesToResize } = vars);\r\n        paneBefore = this.panes[panesToResize[0]] || null;\r\n        paneAfter = this.panes[panesToResize[1]] || null;\r\n      }\r\n\r\n      if (paneBefore !== null) {\r\n        paneBefore.size = Math.min(\r\n          Math.max(\r\n            dragPercentage - sums.prevPanesSize - sums.prevReachedMinPanes,\r\n            paneBefore.min\r\n          ),\r\n          paneBefore.max\r\n        );\r\n      }\r\n      if (paneAfter !== null) {\r\n        paneAfter.size = Math.min(\r\n          Math.max(\r\n            100 -\r\n              dragPercentage -\r\n              sums.nextPanesSize -\r\n              sums.nextReachedMinPanes,\r\n            paneAfter.min\r\n          ),\r\n          paneAfter.max\r\n        );\r\n      }\r\n    },\r\n    doPushOtherPanes(sums, dragPercentage) {\r\n      const splitterIndex = this.touch.activeSplitter;\r\n      const panesToResize = [splitterIndex, splitterIndex + 1];\r\n      // Pushing Down.\r\n      // Going smaller than the current pane min size: take the previous expanded pane.\r\n      if (\r\n        dragPercentage <\r\n        sums.prevPanesSize + this.panes[panesToResize[0]].min\r\n      ) {\r\n        panesToResize[0] = this.findPrevExpandedPane(splitterIndex).index;\r\n\r\n        sums.prevReachedMinPanes = 0;\r\n        // If pushing a n-2 or less pane, from splitter, then make sure all in between is at min size.\r\n        if (panesToResize[0] < splitterIndex) {\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > panesToResize[0] && i <= splitterIndex) {\r\n              pane.size = pane.min;\r\n              sums.prevReachedMinPanes += pane.min;\r\n            }\r\n          });\r\n        }\r\n        sums.prevPanesSize = this.sumPrevPanesSize(panesToResize[0]);\r\n        // If nothing else to push down, cancel dragging.\r\n        if (panesToResize[0] === undefined) {\r\n          sums.prevReachedMinPanes = 0;\r\n          this.panes[0].size = this.panes[0].min;\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > 0 && i <= splitterIndex) {\r\n              pane.size = pane.min;\r\n              sums.prevReachedMinPanes += pane.min;\r\n            }\r\n          });\r\n          this.panes[panesToResize[1]].size =\r\n            100 -\r\n            sums.prevReachedMinPanes -\r\n            this.panes[0].min -\r\n            sums.prevPanesSize -\r\n            sums.nextPanesSize;\r\n          return null;\r\n        }\r\n      }\r\n      // Pushing Up.\r\n      // Pushing up beyond min size is reached: take the next expanded pane.\r\n      if (\r\n        dragPercentage >\r\n        100 - sums.nextPanesSize - this.panes[panesToResize[1]].min\r\n      ) {\r\n        panesToResize[1] = this.findNextExpandedPane(splitterIndex).index;\r\n        sums.nextReachedMinPanes = 0;\r\n        // If pushing a n+2 or more pane, from splitter, then make sure all in between is at min size.\r\n        if (panesToResize[1] > splitterIndex + 1) {\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > splitterIndex && i < panesToResize[1]) {\r\n              pane.size = pane.min;\r\n              sums.nextReachedMinPanes += pane.min;\r\n            }\r\n          });\r\n        }\r\n        sums.nextPanesSize = this.sumNextPanesSize(panesToResize[1] - 1);\r\n        // If nothing else to push up, cancel dragging.\r\n        if (panesToResize[1] === undefined) {\r\n          sums.nextReachedMinPanes = 0;\r\n          this.panes[this.panes.length - 1].size = this.panes[\r\n            this.panes.length - 1\r\n          ].min;\r\n          this.panes.forEach((pane, i) => {\r\n            if (i < this.panes.length - 1 && i >= splitterIndex + 1) {\r\n              pane.size = pane.min;\r\n              sums.nextReachedMinPanes += pane.min;\r\n            }\r\n          });\r\n          this.panes[panesToResize[0]].size =\r\n            100 -\r\n            sums.prevPanesSize -\r\n            sums.nextReachedMinPanes -\r\n            this.panes[this.panes.length - 1].min -\r\n            sums.nextPanesSize;\r\n          return null;\r\n        }\r\n      }\r\n      return { sums, panesToResize };\r\n    },\r\n    sumPrevPanesSize(splitterIndex) {\r\n      return this.panes.reduce(\r\n        (total, pane, i) => total + (i < splitterIndex ? pane.size : 0),\r\n        0\r\n      );\r\n    },\r\n    sumNextPanesSize(splitterIndex) {\r\n      return this.panes.reduce(\r\n        (total, pane, i) => total + (i > splitterIndex + 1 ? pane.size : 0),\r\n        0\r\n      );\r\n    },\r\n    // Return the previous pane from siblings which has a size (width for vert or height for horz) of more than 0.\r\n    findPrevExpandedPane(splitterIndex) {\r\n      const pane = [...this.panes]\r\n        .reverse()\r\n        .find(p => p.index < splitterIndex && p.size > p.min);\r\n      return pane || {};\r\n    },\r\n    // Return the next pane from siblings which has a size (width for vert or height for horz) of more than 0.\r\n    findNextExpandedPane(splitterIndex) {\r\n      const pane = this.panes.find(\r\n        p => p.index > splitterIndex + 1 && p.size > p.min\r\n      );\r\n      return pane || {};\r\n    },\r\n    // Called when the component is mounted and updated: update the panes and splitter as needed.\r\n    update() {\r\n      let lastIsPane = false;\r\n      let nbPanes = 0;\r\n      let setPanesSizesToDefault = false;\r\n      // Loop through children: some panes and splitters may have been reused by Vue.js recycling mechanism.\r\n      [...this.container.children].forEach(child => {\r\n        if (child.classList.contains(\"splitpanes__pane\")) {\r\n          // Pane\r\n          const paneIndex = nbPanes;\r\n\r\n          if (lastIsPane) {\r\n            // The previous child is a pane: we need to create a new splitter in between.\r\n            const splitterIndex = paneIndex - 1;\r\n            const elm = document.createElement(\"div\");\r\n            elm.classList.add(\"splitpanes__splitter\");\r\n            elm.setAttribute(\"data-splitpanes-index\", splitterIndex);\r\n            elm.onmousedown = event => this.onMouseDown(event, splitterIndex);\r\n            if (typeof window !== \"undefined\" && \"ontouchstart\" in window) {\r\n              elm.ontouchstart = event =>\r\n                this.onMouseDown(event, splitterIndex);\r\n            }\r\n            elm.onclick = event =>\r\n              this.onSplitterClick(event, splitterIndex + 1);\r\n            if (this.dblClickSplitter) {\r\n              elm.ondblclick = event =>\r\n                this.onSplitterDblClick(event, splitterIndex + 1);\r\n            }\r\n            Object.defineProperty(child, \"before\", {\r\n              configurable: true,\r\n              enumerable: true,\r\n              writable: true,\r\n              value: function before() {\r\n                var argArr = Array.prototype.slice.call(arguments),\r\n                  docFrag = document.createDocumentFragment();\r\n\r\n                argArr.forEach(function(argItem) {\r\n                  var isNode = argItem instanceof Node;\r\n                  docFrag.appendChild(\r\n                    isNode ? argItem : document.createTextNode(String(argItem))\r\n                  );\r\n                });\r\n\r\n                this.parentNode.insertBefore(docFrag, this);\r\n              }\r\n            });\r\n            child.before(elm);\r\n          }\r\n\r\n          lastIsPane = true;\r\n          nbPanes++;\r\n          if (\r\n            child.getAttribute(\"data-splitpanes-index\") === paneIndex.toString()\r\n          ) {\r\n            // The pane has been recycled and is at the correct position: nothing to change.\r\n            return;\r\n          }\r\n\r\n          // Otherwise, update the pane information.\r\n          child.setAttribute(\"id\", `pane_${paneIndex}`);\r\n          child.setAttribute(\"data-splitpanes-index\", paneIndex);\r\n          child.onclick = event => this.onPaneClick(event, paneIndex);\r\n\r\n          // Get pane size.\r\n          const vm = this.$children[paneIndex];\r\n          let size = 0;\r\n          if (!setPanesSizesToDefault) {\r\n            if (typeof vm.size === \"undefined\") {\r\n              // No 'size' prop set, the size will be set to \"100 / nbPanes\" after this loop since we don't know yet how many panes there are.\r\n              setPanesSizesToDefault = true;\r\n            } else {\r\n              // The size is given in prop.\r\n              size = Number.parseFloat(vm.size);\r\n            }\r\n          }\r\n\r\n          // Update `this.panes` with the new pane information.\r\n          this.$set(this.panes, paneIndex, {\r\n            index: paneIndex,\r\n            min:\r\n              typeof vm.minSize === \"undefined\"\r\n                ? 0\r\n                : Number.parseFloat(vm.minSize),\r\n            max:\r\n              typeof vm.maxSize === \"undefined\"\r\n                ? 100\r\n                : Number.parseFloat(vm.maxSize),\r\n            size\r\n          });\r\n        } else {\r\n          // Splitter\r\n          if (!lastIsPane) {\r\n            // The previous child is already a splitter, so we need to remove this one.\r\n            child.onmousedown = undefined;\r\n            child.onclick = undefined;\r\n            child.ondblclick = undefined;\r\n            child.remove();\r\n            return;\r\n          }\r\n\r\n          lastIsPane = false;\r\n          const splitterIndex = nbPanes - 1;\r\n          if (child.hasAttribute(\"data-splitpanes-index\")) {\r\n            if (\r\n              child.getAttribute(\"data-splitpanes-index\") ===\r\n              splitterIndex.toString()\r\n            ) {\r\n              // The splitter is at the correct position: nothing to change.\r\n              return;\r\n            }\r\n            // Otherwise, we'll need to update its information, so let's start by erasing the old ones.\r\n            child.onmousedown = undefined;\r\n            child.onclick = undefined;\r\n            child.ondblclick = undefined;\r\n          }\r\n          // Update the splitter information.\r\n          child.setAttribute(\"data-splitpanes-index\", splitterIndex);\r\n          child.onmousedown = event => this.onMouseDown(event, splitterIndex);\r\n          child.onclick = event => this.onSplitterClick(event, splitterIndex);\r\n          if (this.dblClickSplitter) {\r\n            child.ondblclick = event =>\r\n              this.onSplitterDblClick(event, splitterIndex);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Remove the trailing splitter if any.\r\n      [...this.container.children].reverse().some(child => {\r\n        if (child.classList.contains(\"splitpanes__pane\")) {\r\n          return true;\r\n        }\r\n        if (child.classList.contains(\"splitpanes__splitter\")) {\r\n          child.onmousedown = undefined;\r\n          child.onclick = undefined;\r\n          child.ondblclick = undefined;\r\n          child.remove();\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if (this.panes.length > nbPanes) {\r\n        // There are less panes than before, so we need to remove the unused ones from `this.panes`.\r\n        this.panes.splice(nbPanes, this.panes.length - nbPanes + 1);\r\n      }\r\n\r\n      if (setPanesSizesToDefault) {\r\n        // If some panes have no `size` prop set, then we compute and set their default size.\r\n        const size = 100 / this.panes.length;\r\n        this.panes.forEach(pane => {\r\n          pane.size = size;\r\n        });\r\n      }\r\n    },\r\n    // Called by pane component on programmatic resize.\r\n    requestUpdate({ target, ...args }) {\r\n      const index = target.$el.getAttribute(\"data-splitpanes-index\");\r\n      const pane = this.panes[index];\r\n      Object.entries(args).forEach(([key, value]) => {\r\n        pane[key] = value;\r\n      });\r\n    }\r\n  },\r\n  updated() {\r\n    this.update();\r\n  },\r\n  mounted() {\r\n    this.container = this.$refs.container;\r\n    this.update();\r\n    this.$emit(\"ready\");\r\n  },\r\n  render(h) {\r\n    return h(\r\n      \"div\",\r\n      {\r\n        ref: \"container\",\r\n        class: [\r\n          \"splitpanes\",\r\n          `splitpanes--${this.horizontal ? \"horizontal\" : \"vertical\"}`,\r\n          {\r\n            \"splitpanes--dragging\": this.touch.dragging\r\n          }\r\n        ]\r\n      },\r\n      this.$slots.default\r\n    );\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.splitpanes {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  &--vertical {\r\n    flex-direction: row;\r\n  }\r\n  &--horizontal {\r\n    flex-direction: column;\r\n  }\r\n  &--dragging * {\r\n    user-select: none;\r\n  }\r\n  &__pane {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    transition: width 0.2s ease-out, height 0.2s ease-out;\r\n    .splitpanes--dragging & {\r\n      transition: none;\r\n    }\r\n  }\r\n  // Disable default zoom behavior on touch device when double tapping splitter.\r\n  &__splitter {\r\n    touch-action: none;\r\n  }\r\n  &--vertical > .splitpanes__splitter {\r\n    min-width: 1px;\r\n    cursor: col-resize;\r\n  }\r\n  &--horizontal > .splitpanes__splitter {\r\n    min-height: 1px;\r\n    cursor: row-resize;\r\n  }\r\n}\r\n.splitpanes.default-theme {\r\n  .splitpanes__pane {\r\n    background-color: #f2f2f2;\r\n  }\r\n  .splitpanes__splitter {\r\n    background-color: #fff;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    &:before,\r\n    &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      background-color: rgba(0, 0, 0, 0.15);\r\n      transition: background-color 0.3s;\r\n    }\r\n    &:hover:before,\r\n    &:hover:after {\r\n      background-color: rgba(0, 0, 0, 0.25);\r\n    }\r\n  }\r\n}\r\n.default-theme {\r\n  &.splitpanes .splitpanes .splitpanes__splitter {\r\n    z-index: 1;\r\n  }\r\n  &.splitpanes--vertical > .splitpanes__splitter,\r\n  .splitpanes--vertical > .splitpanes__splitter {\r\n    width: 9px;\r\n    border-left: 1px solid #eee;\r\n    margin-left: -1px;\r\n    &:before,\r\n    &:after {\r\n      transform: translateY(-50%);\r\n      width: 1px;\r\n      height: 30px;\r\n    }\r\n    &:before {\r\n      margin-left: -2px;\r\n    }\r\n    &:after {\r\n      margin-left: 1px;\r\n    }\r\n  }\r\n  &.splitpanes--horizontal > .splitpanes__splitter,\r\n  .splitpanes--horizontal > .splitpanes__splitter {\r\n    height: 9px;\r\n    border-top: 1px solid #eee;\r\n    margin-top: -1px;\r\n    &:before,\r\n    &:after {\r\n      transform: translateX(-50%);\r\n      width: 30px;\r\n      height: 1px;\r\n    }\r\n    &:before {\r\n      margin-top: -2px;\r\n    }\r\n    &:after {\r\n      margin-top: 1px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","var render, staticRenderFns\nimport script from \"./splitpanes.vue?vue&type=script&lang=js&\"\nexport * from \"./splitpanes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./splitpanes.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","export default {\r\n  'name': 'pane',\r\n  'props': {\r\n    'size': {\r\n      'type': [Number, String],\r\n      'required': false,\r\n      'default': undefined\r\n    },\r\n    'minSize': {\r\n      'type': [Number, String],\r\n      'required': false,\r\n      'default': 0\r\n    },\r\n    'maxSize': {\r\n      'type': [Number, String],\r\n      'required': false,\r\n      'default': 100\r\n    }\r\n  },\r\n  'data': () => ({\r\n    'style': {}\r\n  }),\r\n  'computed': {\r\n    sizeNumber () {\r\n      return parseFloat(this.size)\r\n    },\r\n    minSizeNumber () {\r\n      return parseFloat(this.minSize)\r\n    },\r\n    maxSizeNumber () {\r\n      return parseFloat(this.maxSize)\r\n    }\r\n  },\r\n  'watch': {\r\n    sizeNumber (size) {\r\n      this.$parent.requestUpdate({\r\n        'target': this,\r\n        size\r\n      })\r\n    },\r\n    minSizeNumber (min) {\r\n      this.$parent.requestUpdate({\r\n        'target': this,\r\n        min\r\n      })\r\n    },\r\n    maxSizeNumber (max) {\r\n      this.$parent.requestUpdate({\r\n        'target': this,\r\n        max\r\n      })\r\n    }\r\n  },\r\n  'methods': {\r\n    update (style) {\r\n      this.style = style\r\n    }\r\n  },\r\n  render (h) {\r\n    return h(\r\n      'div',\r\n      {\r\n        'class': ['splitpanes__pane'],\r\n        'style': this.style\r\n      },\r\n      this.$slots.default\r\n    )\r\n  }\r\n}\r\n","import './setPublicPath'\nexport * from '~entry'\n"],"sourceRoot":""}